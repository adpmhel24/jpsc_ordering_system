
upstream app_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response

  # for UNIX domain socket setups
  #server unix:/tmp/gunicorn.sock fail_timeout=0;

  # for a TCP configuration
  server jpsc_prod_api:8001 fail_timeout=0;
}

server {
  # if no Host match, close the connection to prevent host spoofing
  listen 80 default_server;
  return 444;
}

  server {
    # use 'listen 80 deferred;' for Linux
    # use 'listen 80 accept_filter=httpready;' for FreeBSD
    client_max_body_size 4G;

    # set the correct host(s) for your site
    server_name api-test.jpoonandsons.com;

    keepalive_timeout 5;


    location / {
      # checks for static file, if not found proxy to app
      try_files $uri @proxy_to_app;
    }

    location @proxy_to_app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://app_server;
    }

    #error_page 500 502 503 504 /500.html;
    #location = /500.html {
    #  root /path/to/app/current/public;
    #}

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/nginx/ssl/live/api-test.jpoonandsons.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/api-test.jpoonandsons.com/privkey.pem;
    ssl_dhparam /etc/nginx/dhparam/dhparam-2048.pem;

}


  server {
    if ($host = api-test.jpoonandsons.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name api-test.jpoonandsons.com;
    return 404; # managed by Certbot


}
